// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int          @id @default(autoincrement())
  name               String
  email              String
  password           String
  managerId          Int?
  manager            User?        @relation("managedUser", fields: [managerId], references: [id])
  managed            User[]       @relation("managedUser")
  isBusinessPartner  Boolean?     @default(false)
  userTypeId         Int
  userType           UserType     @relation(fields: [userTypeId], references: [id])
  companyId          Int?
  company            Company?     @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  managedDepartments Department[] @relation("department_manager")
  departmentId       Int?
  department         Department?  @relation("user_department", fields: [departmentId], references: [id])
  officeId           Int?
  office             Office?      @relation(fields: [officeId], references: [id])
  positionId         Int?
  position           Position?    @relation(fields: [positionId], references: [id])
}

model UserType {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}

model Company {
  id          Int          @id @default(autoincrement())
  name        String
  offices     Office[]
  departments Department[]
  positions   Position[]
  users       User[]
}

model Office {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  address    String
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id])
  users      User[]
  currencyId Int
  currency   Currency @relation(fields: [currencyId], references: [id])
}

model Department {
  id        Int     @id @default(autoincrement())
  name      String
  company   Company @relation(fields: [companyId], references: [id])
  companyId Int
  managerId Int?
  manager   User?   @relation("department_manager", fields: [managerId], references: [id])
  users     User[]  @relation("user_department")
}

model Position {
  id        Int     @id @default(autoincrement())
  name      String
  company   Company @relation(fields: [companyId], references: [id])
  companyId Int
  users     User[]
}

model Currency {
  id      Int      @id @default(autoincrement())
  name    String
  symbol  String
  offices Office[]
}
